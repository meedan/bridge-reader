<!DOCTYPE html>
<!-- This is the child window -->
<html>

  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Bridge Embed</title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width">
    <%= stylesheet_link_tag 'bridge', media: 'all' %>
    <%= javascript_include_tag 'jquery-2.1.3.min' %>
    <script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>
  </head>

  <body class="bridgeEmbed">
      
    <% @translations.each do |translation| %>
    <div class="bridgeEmbed__item">
        
      <!-- Item Geodata -->
      <% unless translation[:oembed].coordinates.nil? %>
        <div class="bridgeEmbed__item-geodata">
          <a href="http://maps.google.com/?ie=UTF8&hq=&ll=<%= translation[:oembed].coordinates[0] %>,<%= translation[:oembed].coordinates[1] %>&z=13" target="_blank">
            <i class="icon"></i>
            <%= translation[:oembed].coordinates[0] %>,
            <%= translation[:oembed].coordinates[1] %>
          </a>
        </div>
      <% end %>

      <!-- Item Title -->
      <!-- <a href="<%#= translation[:link] %>" class="bridgeEmbed__item-oembed-title">
        <%#= translation[:oembed].title || translation[:link] %>
      </a> -->
      
      <!-- Item Source -->
      <a class="bridgeEmbed__item-embedly-card" href="<%= translation[:link] %>"></a>

      <!-- Item Translation -->
      <div class="bridgeEmbed__item-translation">
        <div class="translation"><%= translation[:translation] %></div>
        <div class="byline">
          <span>Translated by</span>
          <a class="name" href="<%= translation[:translator_url] %>" target="_blank">
            <%= translation[:translator_name] %>
          </a>
        </div>
      </div>

      <!-- Item Annotations -->
      <% unless translation[:comment].blank? %>
        <div class="bridgeEmbed__item-comment">
          <!-- <div class="count"><span>1</span> Translation Note</div> -->
          <p class="comment">* <%= translation[:comment] %> — <span class="byline"><%= translation[:translator_name] %></span></p>
        </div>
      <% end %>

    </div>
    <% end %>
    
    <div id="bridgeEmbed__footer">
      <a href="http://meedanlabs.com" target="_blank"><div>Powered by Bridge</div></a>
    </div>

    <script type="text/javascript">
    // Alert parent window when the height changes
    var htmlHeight = 0;
    var checkHTMLHeight = function() {
      var height = document.getElementsByTagName('BODY')[0].offsetHeight;
      if (height !== htmlHeight) {
        htmlHeight = height;
        window.parent.postMessage(['setHeight', '<%= @milestone %>', htmlHeight].join(';'), '*');
      }
      setTimeout(checkHTMLHeight, 100);
    }
    // Start the checker
    checkHTMLHeight();

    var isElementOnViewPort = function(el, data) {
      var rect = el.getBoundingClientRect(),
          h = data[0], w = data[1], tp = data[2], left = data[3], bottom = data[4], right = data[5];

      return (
        rect.top + tp >= 0 &&
        rect.left + left >= 0 &&
        rect.bottom + tp <= h &&
        rect.right + left <= w
      );
    };

    var messageCallback = function(e) {
      var data = e.data.split(';'),
          type = data.shift();

      for (var i = 0; i < data.length; i++) {
        data[i] = parseInt(data[i], 10);
      }

      switch (type) {
        // Lazy load
        case 'lazyLoad':
          $('.bridgeEmbed__item-embedly-card').each(function() {
            if (!$(this).hasClass('embedly-card') && isElementOnViewPort($(this)[0], data)) {
              $(this).addClass('embedly-card');
              try {
                embedly('card', $(this)[0]);
              }
              catch(e) {
                // Embedly is not ready
              }
            }
          });
          break;
      }
    };

    if (!window.addEventListener) {
      window.attachEvent('onmessage', messageCallback);
    }
    else {
      window.addEventListener('message', messageCallback, false);
    }
    </script>
  </body>
</html>
